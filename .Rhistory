install.packages("forecast")
install.packages("rugarch")
library(forecast)
library(timeSeries)
install.packages("timeSeries")
library(forecast)
library(timeSeries)
library(rugarch)
install.packages("rugarch")
library(forecast)
library(timeSeries)
library(rugarch)
install.packages("ks")
library(forecast)
library(timeSeries)
library(rugarch)
install.packages("ks")
install.packages("rugarch")
library(forecast)
library(timeSeries)
library(rugarch)
library(data.table)
library(dplyr)
library(tidyverse)
data <- fread("ATT_Twitter.csv", sep=",", header=T, strip.white = T, na.strings = c("NA","NaN","","?"))
View(data)
x = ts(data[,2], start = c(2003,1), frequency=12)
plot(x)
x = ts(data[,2], start = c(2003,1), frequency=1)
plot(x)
x = ts(data[,2], start = c(2003,1), frequency=20)
plot(x)
ts_data = ts(data[,2], start=c(06,16), end=c(10,15), frequency=8760)
plot(ts_data)
x = ts(data[,2], start=c(06,16), end=c(10,15), frequency=20)
plot(x)
View(data)
x = ts(data[,2], start=c(06,16), end=c(10,15), frequency=20)
x
x = ts(data[,2], start=c(06,16), end=c(10,15), frequency=12)
x
x = ts(data[,2], start=c(06,16), end=c(10,15), frequency=2928)
x
x = ts(data[,2], start=c(06,16), end=c(10,15), frequency=2928)
plot(x)
x = ts(data[,2], start=c(06,16), end=c(10,15), frequency=9000)
plot(x)
PP.test(x) # Phillips-Perron Unit Root Test
par(mfrow = c(1,2))
acf(x,main='ACF AT&T Twitter')
pacf(x,main='PACF AT&T Twitter')
ARIMAfit = auto.arima(x, approximation=FALSE,trace=TRUE)
summary(ARIMAfit)
spec1=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,0)))
fit1=ugarchfit(data=x,spec=spec1)
show(fit1)
spec2=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,1)))
fit1=ugarchfit(data=x,spec=spec1)
show(fit2)
spec2=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,1)))
fit2=ugarchfit(data=x,spec=spec1)
show(fit2)
spec2=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,1)))
fit2=ugarchfit(data=x,spec=spec2)
show(fit2)
spec2=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,1)))
fit2=ugarchfit(data=x,spec=spec2)
show(fit2)
spec2=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(1,1)))
fit2=ugarchfit(data=x,spec=spec2)
show(fit2)
spec2=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,1)))
fit2=ugarchfit(data=x,spec=spec2)
show(fit2)
spec1=ugarchspec(variance.model=list(model="apARCH"),
mean.model=list(armaOrder=c(0,0)))
fit1=ugarchfit(data=x,spec=spec1)
show(fit1)
spec3=ugarchspec(variance.model=list(model="apARCH"),
mean.model=list(armaOrder=c(0,0)))
fit3=ugarchfit(data=x,spec=spec3)
show(fit3)
spec4=ugarchspec(variance.model=list(model="apARCH"),
mean.model=list(armaOrder=c(0,1)))
fit4=ugarchfit(data=x,spec=spec4)
show(fit4)
library(forecast)
library(timeSeries)
library(rugarch)
library(data.table)
library(dplyr)
library(tidyverse)
data <- fread("ATT_Twitter.csv", sep=",", header=T, strip.white = T, na.strings = c("NA","NaN","","?"))
x = ts(data[,2],  frequency=24) #start=c(06,16), end=c(10,15),
plot(x)
PP.test(x) # Phillips-Perron Unit Root Test
par(mfrow = c(1,2))
acf(x,main='ACF AT&T Twitter')
pacf(x,main='PACF AT&T Twitter')
ARIMAfit = auto.arima(x, approximation=FALSE,trace=TRUE)
summary(ARIMAfit)
spec1=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,0)))
fit1=ugarchfit(data=x,spec=spec1)
show(fit1)
spec2=ugarchspec(variance.model=list(model="sGARCH"),
mean.model=list(armaOrder=c(0,1)))
fit2=ugarchfit(data=x,spec=spec2,solver = "hybrid")
show(fit2)
spec3=ugarchspec(variance.model=list(model="apARCH"),
mean.model=list(armaOrder=c(0,0)))
fit3=ugarchfit(data=x,spec=spec3,solver = "hybrid")
show(fit3)
spec4=ugarchspec(variance.model=list(model="apARCH"),
mean.model=list(armaOrder=c(0,1)))
fit4=ugarchfit(data=x,spec=spec4 ,solver = "hybrid")
show(fit4)
